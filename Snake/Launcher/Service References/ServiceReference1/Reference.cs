//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace Launcher.ServiceReference1 {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Launcher.Web")]
    public partial class User : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int ID_userField;
        
        private string passwordField;
        
        private string usernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_user {
            get {
                return this.ID_userField;
            }
            set {
                if ((this.ID_userField.Equals(value) != true)) {
                    this.ID_userField = value;
                    this.RaisePropertyChanged("ID_user");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SnakeGame", Namespace="http://schemas.datacontract.org/2004/07/Launcher.Web")]
    public partial class SnakeGame : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int ID_gameField;
        
        private System.Nullable<int> ID_userField;
        
        private System.Nullable<int> lvlField;
        
        private System.Nullable<int> scoreField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_game {
            get {
                return this.ID_gameField;
            }
            set {
                if ((this.ID_gameField.Equals(value) != true)) {
                    this.ID_gameField = value;
                    this.RaisePropertyChanged("ID_game");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ID_user {
            get {
                return this.ID_userField;
            }
            set {
                if ((this.ID_userField.Equals(value) != true)) {
                    this.ID_userField = value;
                    this.RaisePropertyChanged("ID_user");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> lvl {
            get {
                return this.lvlField;
            }
            set {
                if ((this.lvlField.Equals(value) != true)) {
                    this.lvlField = value;
                    this.RaisePropertyChanged("lvl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> score {
            get {
                return this.scoreField;
            }
            set {
                if ((this.scoreField.Equals(value) != true)) {
                    this.scoreField = value;
                    this.RaisePropertyChanged("score");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShooterGame", Namespace="http://schemas.datacontract.org/2004/07/Launcher.Web")]
    public partial class ShooterGame : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int ID_gameField;
        
        private System.Nullable<int> ID_userField;
        
        private System.Nullable<int> scoreField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_game {
            get {
                return this.ID_gameField;
            }
            set {
                if ((this.ID_gameField.Equals(value) != true)) {
                    this.ID_gameField = value;
                    this.RaisePropertyChanged("ID_game");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ID_user {
            get {
                return this.ID_userField;
            }
            set {
                if ((this.ID_userField.Equals(value) != true)) {
                    this.ID_userField = value;
                    this.RaisePropertyChanged("ID_user");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> score {
            get {
                return this.scoreField;
            }
            set {
                if ((this.scoreField.Equals(value) != true)) {
                    this.scoreField = value;
                    this.RaisePropertyChanged("score");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/DoWork", ReplyAction="http://tempuri.org/IService1/DoWorkResponse")]
        System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState);
        
        void EndDoWork(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/getUsernames", ReplyAction="http://tempuri.org/IService1/getUsernamesResponse")]
        System.IAsyncResult BegingetUsernames(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Launcher.ServiceReference1.User> EndgetUsernames(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/addUser", ReplyAction="http://tempuri.org/IService1/addUserResponse")]
        System.IAsyncResult BeginaddUser(Launcher.ServiceReference1.User u, System.AsyncCallback callback, object asyncState);
        
        void EndaddUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/getSnakeScoreData", ReplyAction="http://tempuri.org/IService1/getSnakeScoreDataResponse")]
        System.IAsyncResult BegingetSnakeScoreData(int id, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Launcher.ServiceReference1.SnakeGame> EndgetSnakeScoreData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/getShooterScoreData", ReplyAction="http://tempuri.org/IService1/getShooterScoreDataResponse")]
        System.IAsyncResult BegingetShooterScoreData(int id, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Launcher.ServiceReference1.ShooterGame> EndgetShooterScoreData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/getSnakeRecordData", ReplyAction="http://tempuri.org/IService1/getSnakeRecordDataResponse")]
        System.IAsyncResult BegingetSnakeRecordData(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Launcher.ServiceReference1.SnakeGame> EndgetSnakeRecordData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/getShooterRecordData", ReplyAction="http://tempuri.org/IService1/getShooterRecordDataResponse")]
        System.IAsyncResult BegingetShooterRecordData(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Launcher.ServiceReference1.ShooterGame> EndgetShooterRecordData(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Launcher.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getUsernamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getUsernamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Launcher.ServiceReference1.User> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Launcher.ServiceReference1.User>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getSnakeScoreDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getSnakeScoreDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Launcher.ServiceReference1.SnakeGame> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Launcher.ServiceReference1.SnakeGame>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getShooterScoreDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getShooterScoreDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Launcher.ServiceReference1.ShooterGame> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Launcher.ServiceReference1.ShooterGame>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getSnakeRecordDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getSnakeRecordDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Launcher.ServiceReference1.SnakeGame> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Launcher.ServiceReference1.SnakeGame>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getShooterRecordDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getShooterRecordDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Launcher.ServiceReference1.ShooterGame> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Launcher.ServiceReference1.ShooterGame>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Launcher.ServiceReference1.IService1>, Launcher.ServiceReference1.IService1 {
        
        private BeginOperationDelegate onBeginDoWorkDelegate;
        
        private EndOperationDelegate onEndDoWorkDelegate;
        
        private System.Threading.SendOrPostCallback onDoWorkCompletedDelegate;
        
        private BeginOperationDelegate onBegingetUsernamesDelegate;
        
        private EndOperationDelegate onEndgetUsernamesDelegate;
        
        private System.Threading.SendOrPostCallback ongetUsernamesCompletedDelegate;
        
        private BeginOperationDelegate onBeginaddUserDelegate;
        
        private EndOperationDelegate onEndaddUserDelegate;
        
        private System.Threading.SendOrPostCallback onaddUserCompletedDelegate;
        
        private BeginOperationDelegate onBegingetSnakeScoreDataDelegate;
        
        private EndOperationDelegate onEndgetSnakeScoreDataDelegate;
        
        private System.Threading.SendOrPostCallback ongetSnakeScoreDataCompletedDelegate;
        
        private BeginOperationDelegate onBegingetShooterScoreDataDelegate;
        
        private EndOperationDelegate onEndgetShooterScoreDataDelegate;
        
        private System.Threading.SendOrPostCallback ongetShooterScoreDataCompletedDelegate;
        
        private BeginOperationDelegate onBegingetSnakeRecordDataDelegate;
        
        private EndOperationDelegate onEndgetSnakeRecordDataDelegate;
        
        private System.Threading.SendOrPostCallback ongetSnakeRecordDataCompletedDelegate;
        
        private BeginOperationDelegate onBegingetShooterRecordDataDelegate;
        
        private EndOperationDelegate onEndgetShooterRecordDataDelegate;
        
        private System.Threading.SendOrPostCallback ongetShooterRecordDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DoWorkCompleted;
        
        public event System.EventHandler<getUsernamesCompletedEventArgs> getUsernamesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> addUserCompleted;
        
        public event System.EventHandler<getSnakeScoreDataCompletedEventArgs> getSnakeScoreDataCompleted;
        
        public event System.EventHandler<getShooterScoreDataCompletedEventArgs> getShooterScoreDataCompleted;
        
        public event System.EventHandler<getSnakeRecordDataCompletedEventArgs> getSnakeRecordDataCompleted;
        
        public event System.EventHandler<getShooterRecordDataCompletedEventArgs> getShooterRecordDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Launcher.ServiceReference1.IService1.BeginDoWork(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoWork(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Launcher.ServiceReference1.IService1.EndDoWork(System.IAsyncResult result) {
            base.Channel.EndDoWork(result);
        }
        
        private System.IAsyncResult OnBeginDoWork(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Launcher.ServiceReference1.IService1)(this)).BeginDoWork(callback, asyncState);
        }
        
        private object[] OnEndDoWork(System.IAsyncResult result) {
            ((Launcher.ServiceReference1.IService1)(this)).EndDoWork(result);
            return null;
        }
        
        private void OnDoWorkCompleted(object state) {
            if ((this.DoWorkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoWorkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoWorkAsync() {
            this.DoWorkAsync(null);
        }
        
        public void DoWorkAsync(object userState) {
            if ((this.onBeginDoWorkDelegate == null)) {
                this.onBeginDoWorkDelegate = new BeginOperationDelegate(this.OnBeginDoWork);
            }
            if ((this.onEndDoWorkDelegate == null)) {
                this.onEndDoWorkDelegate = new EndOperationDelegate(this.OnEndDoWork);
            }
            if ((this.onDoWorkCompletedDelegate == null)) {
                this.onDoWorkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoWorkCompleted);
            }
            base.InvokeAsync(this.onBeginDoWorkDelegate, null, this.onEndDoWorkDelegate, this.onDoWorkCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Launcher.ServiceReference1.IService1.BegingetUsernames(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetUsernames(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Launcher.ServiceReference1.User> Launcher.ServiceReference1.IService1.EndgetUsernames(System.IAsyncResult result) {
            return base.Channel.EndgetUsernames(result);
        }
        
        private System.IAsyncResult OnBegingetUsernames(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Launcher.ServiceReference1.IService1)(this)).BegingetUsernames(callback, asyncState);
        }
        
        private object[] OnEndgetUsernames(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Launcher.ServiceReference1.User> retVal = ((Launcher.ServiceReference1.IService1)(this)).EndgetUsernames(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetUsernamesCompleted(object state) {
            if ((this.getUsernamesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getUsernamesCompleted(this, new getUsernamesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getUsernamesAsync() {
            this.getUsernamesAsync(null);
        }
        
        public void getUsernamesAsync(object userState) {
            if ((this.onBegingetUsernamesDelegate == null)) {
                this.onBegingetUsernamesDelegate = new BeginOperationDelegate(this.OnBegingetUsernames);
            }
            if ((this.onEndgetUsernamesDelegate == null)) {
                this.onEndgetUsernamesDelegate = new EndOperationDelegate(this.OnEndgetUsernames);
            }
            if ((this.ongetUsernamesCompletedDelegate == null)) {
                this.ongetUsernamesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetUsernamesCompleted);
            }
            base.InvokeAsync(this.onBegingetUsernamesDelegate, null, this.onEndgetUsernamesDelegate, this.ongetUsernamesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Launcher.ServiceReference1.IService1.BeginaddUser(Launcher.ServiceReference1.User u, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginaddUser(u, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Launcher.ServiceReference1.IService1.EndaddUser(System.IAsyncResult result) {
            base.Channel.EndaddUser(result);
        }
        
        private System.IAsyncResult OnBeginaddUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Launcher.ServiceReference1.User u = ((Launcher.ServiceReference1.User)(inValues[0]));
            return ((Launcher.ServiceReference1.IService1)(this)).BeginaddUser(u, callback, asyncState);
        }
        
        private object[] OnEndaddUser(System.IAsyncResult result) {
            ((Launcher.ServiceReference1.IService1)(this)).EndaddUser(result);
            return null;
        }
        
        private void OnaddUserCompleted(object state) {
            if ((this.addUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.addUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void addUserAsync(Launcher.ServiceReference1.User u) {
            this.addUserAsync(u, null);
        }
        
        public void addUserAsync(Launcher.ServiceReference1.User u, object userState) {
            if ((this.onBeginaddUserDelegate == null)) {
                this.onBeginaddUserDelegate = new BeginOperationDelegate(this.OnBeginaddUser);
            }
            if ((this.onEndaddUserDelegate == null)) {
                this.onEndaddUserDelegate = new EndOperationDelegate(this.OnEndaddUser);
            }
            if ((this.onaddUserCompletedDelegate == null)) {
                this.onaddUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnaddUserCompleted);
            }
            base.InvokeAsync(this.onBeginaddUserDelegate, new object[] {
                        u}, this.onEndaddUserDelegate, this.onaddUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Launcher.ServiceReference1.IService1.BegingetSnakeScoreData(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetSnakeScoreData(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Launcher.ServiceReference1.SnakeGame> Launcher.ServiceReference1.IService1.EndgetSnakeScoreData(System.IAsyncResult result) {
            return base.Channel.EndgetSnakeScoreData(result);
        }
        
        private System.IAsyncResult OnBegingetSnakeScoreData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((Launcher.ServiceReference1.IService1)(this)).BegingetSnakeScoreData(id, callback, asyncState);
        }
        
        private object[] OnEndgetSnakeScoreData(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Launcher.ServiceReference1.SnakeGame> retVal = ((Launcher.ServiceReference1.IService1)(this)).EndgetSnakeScoreData(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetSnakeScoreDataCompleted(object state) {
            if ((this.getSnakeScoreDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getSnakeScoreDataCompleted(this, new getSnakeScoreDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getSnakeScoreDataAsync(int id) {
            this.getSnakeScoreDataAsync(id, null);
        }
        
        public void getSnakeScoreDataAsync(int id, object userState) {
            if ((this.onBegingetSnakeScoreDataDelegate == null)) {
                this.onBegingetSnakeScoreDataDelegate = new BeginOperationDelegate(this.OnBegingetSnakeScoreData);
            }
            if ((this.onEndgetSnakeScoreDataDelegate == null)) {
                this.onEndgetSnakeScoreDataDelegate = new EndOperationDelegate(this.OnEndgetSnakeScoreData);
            }
            if ((this.ongetSnakeScoreDataCompletedDelegate == null)) {
                this.ongetSnakeScoreDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetSnakeScoreDataCompleted);
            }
            base.InvokeAsync(this.onBegingetSnakeScoreDataDelegate, new object[] {
                        id}, this.onEndgetSnakeScoreDataDelegate, this.ongetSnakeScoreDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Launcher.ServiceReference1.IService1.BegingetShooterScoreData(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetShooterScoreData(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Launcher.ServiceReference1.ShooterGame> Launcher.ServiceReference1.IService1.EndgetShooterScoreData(System.IAsyncResult result) {
            return base.Channel.EndgetShooterScoreData(result);
        }
        
        private System.IAsyncResult OnBegingetShooterScoreData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((Launcher.ServiceReference1.IService1)(this)).BegingetShooterScoreData(id, callback, asyncState);
        }
        
        private object[] OnEndgetShooterScoreData(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Launcher.ServiceReference1.ShooterGame> retVal = ((Launcher.ServiceReference1.IService1)(this)).EndgetShooterScoreData(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetShooterScoreDataCompleted(object state) {
            if ((this.getShooterScoreDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getShooterScoreDataCompleted(this, new getShooterScoreDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getShooterScoreDataAsync(int id) {
            this.getShooterScoreDataAsync(id, null);
        }
        
        public void getShooterScoreDataAsync(int id, object userState) {
            if ((this.onBegingetShooterScoreDataDelegate == null)) {
                this.onBegingetShooterScoreDataDelegate = new BeginOperationDelegate(this.OnBegingetShooterScoreData);
            }
            if ((this.onEndgetShooterScoreDataDelegate == null)) {
                this.onEndgetShooterScoreDataDelegate = new EndOperationDelegate(this.OnEndgetShooterScoreData);
            }
            if ((this.ongetShooterScoreDataCompletedDelegate == null)) {
                this.ongetShooterScoreDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetShooterScoreDataCompleted);
            }
            base.InvokeAsync(this.onBegingetShooterScoreDataDelegate, new object[] {
                        id}, this.onEndgetShooterScoreDataDelegate, this.ongetShooterScoreDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Launcher.ServiceReference1.IService1.BegingetSnakeRecordData(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetSnakeRecordData(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Launcher.ServiceReference1.SnakeGame> Launcher.ServiceReference1.IService1.EndgetSnakeRecordData(System.IAsyncResult result) {
            return base.Channel.EndgetSnakeRecordData(result);
        }
        
        private System.IAsyncResult OnBegingetSnakeRecordData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Launcher.ServiceReference1.IService1)(this)).BegingetSnakeRecordData(callback, asyncState);
        }
        
        private object[] OnEndgetSnakeRecordData(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Launcher.ServiceReference1.SnakeGame> retVal = ((Launcher.ServiceReference1.IService1)(this)).EndgetSnakeRecordData(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetSnakeRecordDataCompleted(object state) {
            if ((this.getSnakeRecordDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getSnakeRecordDataCompleted(this, new getSnakeRecordDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getSnakeRecordDataAsync() {
            this.getSnakeRecordDataAsync(null);
        }
        
        public void getSnakeRecordDataAsync(object userState) {
            if ((this.onBegingetSnakeRecordDataDelegate == null)) {
                this.onBegingetSnakeRecordDataDelegate = new BeginOperationDelegate(this.OnBegingetSnakeRecordData);
            }
            if ((this.onEndgetSnakeRecordDataDelegate == null)) {
                this.onEndgetSnakeRecordDataDelegate = new EndOperationDelegate(this.OnEndgetSnakeRecordData);
            }
            if ((this.ongetSnakeRecordDataCompletedDelegate == null)) {
                this.ongetSnakeRecordDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetSnakeRecordDataCompleted);
            }
            base.InvokeAsync(this.onBegingetSnakeRecordDataDelegate, null, this.onEndgetSnakeRecordDataDelegate, this.ongetSnakeRecordDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Launcher.ServiceReference1.IService1.BegingetShooterRecordData(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetShooterRecordData(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Launcher.ServiceReference1.ShooterGame> Launcher.ServiceReference1.IService1.EndgetShooterRecordData(System.IAsyncResult result) {
            return base.Channel.EndgetShooterRecordData(result);
        }
        
        private System.IAsyncResult OnBegingetShooterRecordData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Launcher.ServiceReference1.IService1)(this)).BegingetShooterRecordData(callback, asyncState);
        }
        
        private object[] OnEndgetShooterRecordData(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Launcher.ServiceReference1.ShooterGame> retVal = ((Launcher.ServiceReference1.IService1)(this)).EndgetShooterRecordData(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetShooterRecordDataCompleted(object state) {
            if ((this.getShooterRecordDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getShooterRecordDataCompleted(this, new getShooterRecordDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getShooterRecordDataAsync() {
            this.getShooterRecordDataAsync(null);
        }
        
        public void getShooterRecordDataAsync(object userState) {
            if ((this.onBegingetShooterRecordDataDelegate == null)) {
                this.onBegingetShooterRecordDataDelegate = new BeginOperationDelegate(this.OnBegingetShooterRecordData);
            }
            if ((this.onEndgetShooterRecordDataDelegate == null)) {
                this.onEndgetShooterRecordDataDelegate = new EndOperationDelegate(this.OnEndgetShooterRecordData);
            }
            if ((this.ongetShooterRecordDataCompletedDelegate == null)) {
                this.ongetShooterRecordDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetShooterRecordDataCompleted);
            }
            base.InvokeAsync(this.onBegingetShooterRecordDataDelegate, null, this.onEndgetShooterRecordDataDelegate, this.ongetShooterRecordDataCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Launcher.ServiceReference1.IService1 CreateChannel() {
            return new Service1ClientChannel(this);
        }
        
        private class Service1ClientChannel : ChannelBase<Launcher.ServiceReference1.IService1>, Launcher.ServiceReference1.IService1 {
            
            public Service1ClientChannel(System.ServiceModel.ClientBase<Launcher.ServiceReference1.IService1> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("DoWork", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDoWork(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DoWork", _args, result);
            }
            
            public System.IAsyncResult BegingetUsernames(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("getUsernames", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Launcher.ServiceReference1.User> EndgetUsernames(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Launcher.ServiceReference1.User> _result = ((System.Collections.ObjectModel.ObservableCollection<Launcher.ServiceReference1.User>)(base.EndInvoke("getUsernames", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginaddUser(Launcher.ServiceReference1.User u, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = u;
                System.IAsyncResult _result = base.BeginInvoke("addUser", _args, callback, asyncState);
                return _result;
            }
            
            public void EndaddUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("addUser", _args, result);
            }
            
            public System.IAsyncResult BegingetSnakeScoreData(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("getSnakeScoreData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Launcher.ServiceReference1.SnakeGame> EndgetSnakeScoreData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Launcher.ServiceReference1.SnakeGame> _result = ((System.Collections.ObjectModel.ObservableCollection<Launcher.ServiceReference1.SnakeGame>)(base.EndInvoke("getSnakeScoreData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetShooterScoreData(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("getShooterScoreData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Launcher.ServiceReference1.ShooterGame> EndgetShooterScoreData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Launcher.ServiceReference1.ShooterGame> _result = ((System.Collections.ObjectModel.ObservableCollection<Launcher.ServiceReference1.ShooterGame>)(base.EndInvoke("getShooterScoreData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetSnakeRecordData(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("getSnakeRecordData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Launcher.ServiceReference1.SnakeGame> EndgetSnakeRecordData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Launcher.ServiceReference1.SnakeGame> _result = ((System.Collections.ObjectModel.ObservableCollection<Launcher.ServiceReference1.SnakeGame>)(base.EndInvoke("getSnakeRecordData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetShooterRecordData(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("getShooterRecordData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Launcher.ServiceReference1.ShooterGame> EndgetShooterRecordData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Launcher.ServiceReference1.ShooterGame> _result = ((System.Collections.ObjectModel.ObservableCollection<Launcher.ServiceReference1.ShooterGame>)(base.EndInvoke("getShooterRecordData", _args, result)));
                return _result;
            }
        }
    }
}
